// #target: macos-x64
// #debuginfo: yes
module test;
struct Flags { bool flag1; }

fn void foo() {
  int[1] values;
  $foreach ($i, $member : Flags.membersof)
    values[$i] = $i;
  $endforeach
}

fn void main() {
  foo();
}

/* #expect: test.ll

define void @test.foo() #0 !dbg !7 {
entry:
  %values = alloca [1 x i32], align 4
  store i32 0, ptr %values, align 4, !dbg !16
  store i32 0, ptr %values, align 4, !dbg !17
  ret void, !dbg !17
}

!0 = !{i32 4, !"PIC Level", i32 2}
!1 = !{i32 2, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 2, !"frame-pointer", i32 2}
!4 = !{i32 1, !"uwtable", i32 2}
!5 = distinct !DICompileUnit
!6 = !DIFile(filename:
!7 = distinct !DISubprogram(name: "foo", linkageName: "test.foo", scope: !6, file: !6, line: 4, type: !8, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5, retainedNodes: !10)
!8 = !DISubroutineType(types: !9)
!9 = !{null}
!10 = !{}
!11 = !DILocalVariable(name: "values", scope: !7, file: !6, line: 5, type: !12, align: 4)
!12 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 32, align: 32, elements: !14)
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !{!15}
!15 = !DISubrange(count: 1, lowerBound: 0)
!16 = !DILocation(line: 5, column: 10, scope: !7)
!17 = !DILocation(line: 7, column: 18, scope: !18)
!18 = distinct !DILexicalBlock(scope: !19, file: !6, line: 6, column: 3)
!19 = distinct !DILexicalBlock(scope: !7, file: !6, line: 6, column: 3)
!20 = distinct !DISubprogram(name: "main", linkageName: "test.main", scope: !6, file: !6, line: 11, type: !8, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5)
!21 = !DILocation(line: 12, column: 3, scope: !20)
!22 = distinct !DISubprogram(name: "_$main", linkageName: "main", scope: !6, file: !6, line: 11, type: !23, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5, retainedNodes: !10)
!23 = !DISubroutineType(types: !24)
!24 = !{!13, !13, !25}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char**", baseType: !26, size: 64, align: 64, dwarfAddressSpace: 0)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "char*", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!27 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!28 = !DILocalVariable(name: ".anon", arg: 1, scope: !22, file: !6, line: 11, type: !13)
!29 = !DILocation(line: 11, column: 9, scope: !22)
!30 = !DILocalVariable(name: ".anon", arg: 2, scope: !22, file: !6, line: 11, type: !25)
!31 = !DILocation(line: 18, column: 2, scope: !32, inlinedAt: !29)
!32 = distinct !DISubprogram(name: "@main_to_void_main", linkageName: "@main_to_void_main", scope: !33, file: !33, line: 16, scopeLine: 16, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5)
!33 = !DIFile(filename: "main_stub.c3"
!34 = !DILocation(line: 19, column: 9, scope: !32, inlinedAt: !29)
